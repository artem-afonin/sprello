plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}


group 'ru.sprello'
sourceCompatibility = 1.8


configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}


repositories {
    mavenCentral()
}


sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources", "frontend/dist"]
        }
    }
}


dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.2.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.2.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.2.2.RELEASE'
    compile group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: '2.2.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.2.2.RELEASE'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.2.2.RELEASE'

    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.9'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
}


/**** КАСТОМНЫЕ ЗАДАЧИ ЗДЕСЬ ****/


/** Установка пакетов для сборки frontend **/
task installFrontend(type: Exec) {
    workingDir './frontend'
    commandLine 'npm', 'install'
}

/** Сборка фронтенда **/
task buildFrontend(type: Exec) {
    workingDir './frontend'
    commandLine 'npm', 'run', 'build'
}

if (project.hasProperty('frontend')) {
    buildFrontend.dependsOn(installFrontend)
    processResources.dependsOn(buildFrontend)
}